//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Users\Pavel\Documents\KPI\Translators\Crundras\..\Artifacts\Crundras.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Crundras {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CrundrasParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ICrundrasListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] CrundrasParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] CrundrasParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CrundrasParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CrundrasParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionStatement([NotNull] CrundrasParser.SelectionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionStatement([NotNull] CrundrasParser.SelectionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationStatement([NotNull] CrundrasParser.IterationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationStatement([NotNull] CrundrasParser.IterationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] CrundrasParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] CrundrasParser.CompoundStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationStatement([NotNull] CrundrasParser.DeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationStatement([NotNull] CrundrasParser.DeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStatement([NotNull] CrundrasParser.AssignmentStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStatement([NotNull] CrundrasParser.AssignmentStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] CrundrasParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] CrundrasParser.AssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CrundrasParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CrundrasParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.inputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputStatement([NotNull] CrundrasParser.InputStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.inputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputStatement([NotNull] CrundrasParser.InputStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.outputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputStatement([NotNull] CrundrasParser.OutputStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.outputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputStatement([NotNull] CrundrasParser.OutputStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CrundrasParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CrundrasParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign([NotNull] CrundrasParser.SignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign([NotNull] CrundrasParser.SignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] CrundrasParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] CrundrasParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.arithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticOperator([NotNull] CrundrasParser.ArithmeticOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.arithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticOperator([NotNull] CrundrasParser.ArithmeticOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.relationalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalOperator([NotNull] CrundrasParser.RelationalOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.relationalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalOperator([NotNull] CrundrasParser.RelationalOperatorContext context);
}
} // namespace Crundras
