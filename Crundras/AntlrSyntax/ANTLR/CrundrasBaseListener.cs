//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Users\Pavel\Documents\KPI\Translators\Crundras\..\Artifacts\Crundras.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Crundras {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICrundrasListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CrundrasBaseListener : ICrundrasListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CrundrasParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CrundrasParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CrundrasParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CrundrasParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionStatement([NotNull] CrundrasParser.SelectionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionStatement([NotNull] CrundrasParser.SelectionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationStatement([NotNull] CrundrasParser.IterationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationStatement([NotNull] CrundrasParser.IterationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStatement([NotNull] CrundrasParser.CompoundStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStatement([NotNull] CrundrasParser.CompoundStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] CrundrasParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] CrundrasParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] CrundrasParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] CrundrasParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] CrundrasParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] CrundrasParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CrundrasParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CrundrasParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.inputStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputStatement([NotNull] CrundrasParser.InputStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.inputStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputStatement([NotNull] CrundrasParser.InputStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.outputStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputStatement([NotNull] CrundrasParser.OutputStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.outputStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputStatement([NotNull] CrundrasParser.OutputStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] CrundrasParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] CrundrasParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSign([NotNull] CrundrasParser.SignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSign([NotNull] CrundrasParser.SignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] CrundrasParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] CrundrasParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticOperator([NotNull] CrundrasParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticOperator([NotNull] CrundrasParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrundrasParser.relationalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalOperator([NotNull] CrundrasParser.RelationalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrundrasParser.relationalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalOperator([NotNull] CrundrasParser.RelationalOperatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Crundras
